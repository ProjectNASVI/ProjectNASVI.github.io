"use strict";(self.webpackChunknasvi=self.webpackChunknasvi||[]).push([[233],{946:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var t=i(4848),s=i(8453);const o={sidebar_position:4},c=void 0,r={id:"Expanded-Documentation/Object-detection-models",title:"Object-detection-models",description:"Object detection models are a branch of artificial intelligence (AI) and computer vision that aim to identify and locate objects within an image or video stream. They play a crucial role in applications that require an understanding of physical environments, such as autonomous driving, security surveillance, and assistive technology like Project NASVI.",source:"@site/docs/Expanded-Documentation/Object-detection-models.md",sourceDirName:"Expanded-Documentation",slug:"/Expanded-Documentation/Object-detection-models",permalink:"/docs/Expanded-Documentation/Object-detection-models",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Raspberry-Pi",permalink:"/docs/Expanded-Documentation/Raspberry-Pi"}},l={},a=[{value:"Key Concepts in Object Detection",id:"key-concepts-in-object-detection",level:3},{value:"Types of Object Detection Models",id:"types-of-object-detection-models",level:3},{value:"How Object Detection Models Work",id:"how-object-detection-models-work",level:3},{value:"Object Detection in Project NASVI",id:"object-detection-in-project-nasvi",level:3},{value:"Advantages of Using Object Detection Models in NASVI",id:"advantages-of-using-object-detection-models-in-nasvi",level:3}];function d(e){const n={h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Object detection models"})," are a branch of artificial intelligence (AI) and computer vision that aim to identify and locate objects within an image or video stream. They play a crucial role in applications that require an understanding of physical environments, such as autonomous driving, security surveillance, and assistive technology like ",(0,t.jsx)(n.strong,{children:"Project NASVI"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"key-concepts-in-object-detection",children:"Key Concepts in Object Detection"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Object Localization and Classification"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Object detection models go beyond simply classifying what objects are present; they also localize each object by drawing bounding boxes around them."}),"\n",(0,t.jsx)(n.li,{children:"Each detected object has two outputs: the class label (what the object is) and its spatial coordinates (where the object is)."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Bounding Boxes"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A bounding box is a rectangle around the detected object, which helps the system determine the exact location and size of the object within the image."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Confidence Score"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Object detection models often assign a confidence score, indicating the model\u2019s certainty in its identification. This helps filter out uncertain or low-accuracy detections, focusing on the most reliable predictions."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"types-of-object-detection-models",children:"Types of Object Detection Models"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Single-Shot Detectors (SSD)"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["SSD models, like ",(0,t.jsx)(n.strong,{children:"YOLO (You Only Look Once)"}),", perform object detection in a single step. They analyze the entire image at once, making them fast and suitable for real-time applications."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"YOLO"})," is widely used in real-time detection applications due to its speed and relatively good accuracy, making it ideal for projects with limited processing power, like Raspberry Pi-based systems."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Region-based Convolutional Neural Networks (R-CNN)"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Models like R-CNN and its variants (Fast R-CNN, Faster R-CNN) are known for their accuracy. They divide the detection process into stages, first selecting regions of interest and then classifying objects within them."}),"\n",(0,t.jsx)(n.li,{children:"While highly accurate, these models can be slower and may require more processing power."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"MobileNet SSD"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"MobileNet SSD"})," is an optimized model designed for mobile and embedded systems. It combines the SSD approach with MobileNet\u2019s efficient architecture, making it lightweight and capable of running on devices with limited resources."]}),"\n",(0,t.jsx)(n.li,{children:"This model is commonly used with low-power hardware like the Raspberry Pi, as it balances detection speed and accuracy."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"how-object-detection-models-work",children:"How Object Detection Models Work"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Image Input and Preprocessing"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The model takes an image (or video frame) as input and preprocesses it, typically resizing it to a standard resolution."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Feature Extraction"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A convolutional neural network (CNN) extracts essential features from the image, such as edges, shapes, and textures. These features represent object characteristics in a lower-dimensional form."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Bounding Box and Class Prediction"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The model predicts bounding boxes around potential objects, labeling each box with a class (e.g., \u201ccar,\u201d \u201cperson,\u201d \u201ctree\u201d) and a confidence score."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Post-Processing"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The model refines predictions to eliminate duplicate or overlapping detections, keeping only the most confident predictions."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"object-detection-in-project-nasvi",children:"Object Detection in Project NASVI"}),"\n",(0,t.jsxs)(n.p,{children:["In Project NASVI, an object detection model (such as ",(0,t.jsx)(n.strong,{children:"YOLO"})," or ",(0,t.jsx)(n.strong,{children:"MobileNet SSD"}),") plays a vital role by identifying obstacles and key objects in the user\u2019s path. Here\u2019s how it\u2019s applied:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Real-Time Object Detection"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The Raspberry Pi processes the video feed, and the object detection model identifies objects relevant to navigation, such as vehicles, pedestrians, and potential obstacles."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Prioritizing Urgent Objects"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The model assigns confidence scores and determines the proximity of objects, ensuring that critical obstacles or moving hazards are prioritized in feedback."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Audio Feedback Based on Object Detection"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Once objects are detected and classified, the system translates these findings into verbal instructions for the user, guiding them safely around obstacles."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"advantages-of-using-object-detection-models-in-nasvi",children:"Advantages of Using Object Detection Models in NASVI"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Safety and Independence"}),": Real-time identification of obstacles enables users to navigate independently and safely."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Response"}),": The model adapts to new objects in each frame, continuously updating guidance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scalability"}),": NASVI\u2019s detection capabilities can be improved over time with more advanced models, making it adaptable for future updates."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"In summary"}),", object detection models are essential to NASVI's real-time navigation, translating visual information into actionable audio guidance for visually impaired users. This technology offers independence, safety, and situational awareness, enhancing the mobility of those who rely on it."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var t=i(6540);const s={},o=t.createContext(s);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);